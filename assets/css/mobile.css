/* ===== Mobile-first tokens ===== */
:root{
  --tap:48px; --gap:10px; --pad:14px;
  --ink:#111; --bg:#fff; --line:#e6e6e6;
}
@media (max-width:760px){
	
/* === Patch 2025-08-31 — Saisie sous la question === */
.row{
  grid-template-columns: 1fr !important;
  grid-template-areas:
    'lab'
    'inp'
    'res' !important;
}

  /* Conteneur + cartes plus respirants */
  .wrap{padding:12px !important}
  .card{padding:14px !important}

  /* Grilles → une colonne (tes .grid/.g2/.two etc.) */
  .grid, .g2, .grid.two, .grid2{display:grid;grid-template-columns:1fr !important;gap:var(--gap)}

  /* Champs sous la question + largeur 100% */
  .q input[type="text"], .q .answer, input[type="text"], textarea, select{
    width:100%; min-height:var(--tap); font-size:16px; /* évite le zoom iOS */
    margin-top:8px;
  }

  /* Boutons plus grands et cliquables */
  .controls button, .controls .btn, button, .kbd .key{
    min-height:var(--tap);
    padding:12px 14px; font-weight:600;
  }

  /* Tables scrollables si trop larges */
  table{display:block; overflow-x:auto; -webkit-overflow-scrolling:touch}
  table thead, table tbody{width:100%}

  /* Figures (SVG/canvas) fluides */
  svg, canvas, .figure, .circle-host{max-width:100% !important; width:100% !important; height:auto}

  /* Barre d’actions mobile en bas (duplique l’important) */
  .mb-actions{
    position:sticky; bottom:0; z-index:20;
    background:var(--bg); border-top:1px solid var(--line);
    padding:8px calc(10px + env(safe-area-inset-right)) calc(8px + env(safe-area-inset-bottom)) calc(10px + env(safe-area-inset-left));
    display:flex; gap:8px;
  }
  .mb-actions .btn{flex:1}

  /* Clavier math en tiroir */
  .kbd-host[data-collapsible]{position:fixed; left:0; right:0; bottom:0;
    background:#fff; border-top:1px solid var(--line);
    transform:translateY(100%); transition:transform .25s ease; z-index:30;
    padding-bottom:calc(env(safe-area-inset-bottom) + 6px);
  }
  .kbd-host[data-open="1"]{transform:translateY(0)}
  .kbd-toggle{position:fixed; right:12px; bottom:calc(64px + env(safe-area-inset-bottom));
    background:#111; color:#fff; border-radius:999px; padding:10px 14px; z-index:31}
}

/* Focus visibles partout */
:focus-visible{outline:2px solid #60a5fa; outline-offset:2px}


@media (max-width:760px){

  /************************************
   * 1. Réglages généraux SVG MathJax
   ************************************/

  /* Tous les conteneurs MathJax SVG */
  mjx-container[jax="SVG"]{
    /* on veut que ça se comporte comme un mot tant qu'on n'a pas explicitement du display */
    display:inline-block !important;
    font-size:1em !important;
    line-height:1.3 !important;    /* un peu plus grand que 1.2 pour éviter l'écrasement minuscule */
    vertical-align:-0.2em !important;
    margin:0 .15em 0 .15em !important;
    padding:0 !important;
    max-width:100%;
  }

  /* le SVG interne ne doit pas imposer une hauteur malade MAIS
     on enlève le "height:1em" trop agressif qui a tout riquiqui.
     => On laisse auto, mais on empêche les énormes dépassements. */
  mjx-container[jax="SVG"] svg{
    width:auto;
    max-width:100%;
    height:auto !important;        /* ⇐ avant on forçait 1em, c'est ça qui rendait minuscule */
    max-height:2.2em;              /* sécurité pour éviter une formule qui bouffe 5 lignes */
  }

  /* éviter les origins chelous mais on garde le rendu naturel */
  mjx-container[jax="SVG"] svg > g{
    transform-origin:left bottom;
  }

  /************************************
   * 2. INLINE MATH ( \( ... \ ) , $...$ )
   ************************************/

  /* Inline doit rester dans le flux texte, pas sauter à la ligne, pas créer un paragraphe vide */
  mjx-container[jax="SVG"][display="inline"]{
    display:inline-block !important;
    line-height:1.3 !important;
    vertical-align:-0.2em !important;
    margin-top:0 !important;
    margin-bottom:0 !important;
    text-align:left !important;    /* PAS centré */
  }

  /* encore une fois, pas de hauteur forcée ridicule */
  mjx-container[jax="SVG"][display="inline"] svg{
    height:auto !important;
    max-height:2.2em;
  }

  /************************************
   * 3. DISPLAY MATH ( \[ ... \] , $$...$$ )
   ************************************/

  /* Les math d'affichage (grandes formules isolées) : oui elles prennent leur propre ligne,
     mais elles ne doivent ni être géantes ni SYSTÉMATIQUEMENT centrées sur mobile */
  mjx-container[jax="SVG"][display="true"]{
    display:block !important;
    text-align:left !important;    /* avant c'était center => enlève le centrage que tu n'a pas demandé */
    font-size:1em !important;      /* on remet 1em (plus 0.95em), parce que 0.95 les rendait trop petites */
    line-height:1.4 !important;
    margin:0.5em 0 !important;     /* espace raisonnable au-dessus / dessous */
    padding:0 !important;
  }

  mjx-container[jax="SVG"][display="true"] svg{
    height:auto !important;
    max-height:3em;                /* un affichage peut être un peu plus grand qu'inline */
  }

  /************************************
   * 4. PAS DE "TROUS" DANS LE TEXTE
   ************************************/

  /* Dans des paragraphes ou listes, on refuse que MathJax rajoute ses propres grosses marges */
  p mjx-container[jax="SVG"],
  li mjx-container[jax="SVG"],
  .enonce mjx-container[jax="SVG"],
  .steps mjx-container[jax="SVG"],
  .uvtab mjx-container[jax="SVG"],
  .twocol-solution mjx-container[jax="SVG"]{
    margin-top:0 !important;
    margin-bottom:0 !important;
    padding:0 !important;
  }

  /* Certaines de tes zones "solution" mettaient un padding-bottom pour aérer Desktop */
  .steps mjx-container{
    padding-bottom:0 !important;
  }

  /************************************
   * 5. COMPORTEMENT DANS LES CARTES
   ************************************/

  /* Empêche la carte d'exploser sa hauteur parce qu'une fraction légendaire a un gros numérateur */
  .card mjx-container[jax="SVG"]{
    max-width:100%;
    overflow:visible;
  }
}
